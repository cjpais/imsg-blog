import Head from "next/head";
import Image from "next/image";
import styles from "../../../styles/Home.module.css";
import { useRouter } from "next/router";

import useFeedRecent from "../../../hooks/use-feed-recent";

const SinglePageView = () => {
  const router = useRouter();
  const { id } = router.query;
  console.log({ id });
  const { format: queryFormat } = router.query;
  const format = queryFormat || "html";

  console.log({ format });

  const url = `http://localhost:3001/api/data?author=${id}`;

  // const dataJSON = data.json();

  // console.log({dataJSON})
  const { feed } = useFeedRecent(id);
  console.log(feed);

  const baseImageURL =
    "https://matrix.matrix.notes.site/_matrix/media/r0/download/matrix.notes.site/";


  return (
    <div className={styles.container}>
      <Head>
        <title>feed {id}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}></h1>

        {format && format === "html" && (
          <div className="flex flex-col">
            {feed?.map((item) => {
              if (item.type == "m.image") {
                return (
                  <div
                    key={item.id}
                    style={{
                      "margin-bottom": "1rem",
                      position: "relative",
                      width: "80%",
                      paddingBottom: "100%",
                    }}
                  >
                    <Image
                      layout="fill"
                      objectFit="contain"
                      key={item.id}
                      alt=""
                      src={`${baseImageURL}${item.fileName}`}
                    ></Image>
                    {/* <a className="" key={item.id} >
                      {baseImageURL}
                      {item.metadata.url.split("/")[3]}
                    </a> */}
                  </div>
                );
              } else {
                if (item.type == "m.file") {
                  return (
                    <div
                      className=""
                      style={{
                        "padding-bottom": "1rem",
                        "word-break": "break-all",
                      }}
                      key={item.id}
                    >
                      {/* todo: linkify, paragraph style */}
                      {/* hover for relative date? */}
                      <span className="text-white my-3">{item.data ? `${item.data} (transcribed)` : '(transcribing...)'}</span>
                      {/* {
                        item.fileName && <audio controls={true} src={`${baseImageURL}${item.fileName}`}></audio>
                      } */}
                    </div>
                  );

                } else {
                  return (
                    <div
                      className=""
                      style={{
                        "padding-bottom": "1rem",
                        "word-break": "break-all",
                      }}
                      key={item.id}
                    >
                      {/* todo: linkify, paragraph style */}
                      {/* hover for relative date? */}
                      <span className="text-white my-3">{item.data}</span>
                    </div>
                  );
                }
              }
            })}
          </div>
        )}

        {format && format === "json" && (
          <pre>{JSON.stringify(feed, null, 2)}</pre>
        )}
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          <span className={styles.logo}>powered by caffeine</span>
        </a>
      </footer>
    </div>
  );
};

export default SinglePageView;
